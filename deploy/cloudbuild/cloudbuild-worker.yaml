############################################################################
#                                                                          #
#              SIMPLIFIED BUILDER FOR API WORKER LAYERS                    #
#                                                                          #
############################################################################

# This Cloud Build file builds a Docker image, pushes it to Artifact
# Registry, and deploys it to a GPU-based Cloud Run Job.

substitutions:
  _GOOGLE_CLOUD_PROJECT: "laxai-466119"
  _SERVICE_ACCOUNT: "googlebatch@${_GOOGLE_CLOUD_PROJECT}.iam.gserviceaccount.com"

steps:
  # Build the training worker image
  - id: "build-worker-image"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-f"
      - "docker/worker/Dockerfile.worker"
      - "-t"
      - "us-central1-docker.pkg.dev/${_GOOGLE_CLOUD_PROJECT}/laxai-repo/laxai-worker:latest"
      - "--build-arg"
      - "REQS=requirements-gpu.txt"
      - "--build-arg"
      - "GOOGLE_CLOUD_PROJECT=${_GOOGLE_CLOUD_PROJECT}"
      - "."

  # Push the worker image
  - id: "push-worker-image"
    name: "gcr.io/cloud-builders/docker"
    args:
      - "push"
      - "us-central1-docker.pkg.dev/${_GOOGLE_CLOUD_PROJECT}/laxai-repo/laxai-worker:latest"

  # Setup Pub/Sub infrastructure
  - id: "setup-pubsub"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Setting up Pub/Sub infrastructure..."
        
        # Create topic if it doesn't exist
        gcloud pubsub topics create training-jobs || echo "Topic may already exist"
        
        # Create subscription if it doesn't exist
        gcloud pubsub subscriptions create training-jobs-sub \
          --topic=training-jobs \
          --ack-deadline=600 \
          --message-retention-duration=7d || echo "Subscription may already exist"
        
        echo "Pub/Sub setup complete"

  # Deploy Cloud Run Job
  - id: "deploy-cloud-run-job"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        # Generate job configuration
        cat > cloud-run-job.yaml << EOF
        apiVersion: run.googleapis.com/v1
        kind: Job
        metadata:
          name: laxai-worker
          labels:
            cloud.googleapis.com/location: us-central1
        spec:
          template:
            spec:
              taskCount: 1
              parallelism: 1
              template:
                spec:
                  timeout: "36000s"
                  restartPolicy: "Never"
                  serviceAccountName: "${_SERVICE_ACCOUNT}"
                  containers:
                  - name: training-worker
                    image: us-central1-docker.pkg.dev/${_GOOGLE_CLOUD_PROJECT}/laxai-repo/laxai-worker:latest
                    env:
                    - name: GOOGLE_CLOUD_PROJECT
                      value: "${_GOOGLE_CLOUD_PROJECT}"
                    - name: TRAINING_JOBS_SUBSCRIPTION
                      value: "training-jobs-sub"
                    - name: FIRESTORE_ENABLED
                      value: "true"
                    - name: WORKER_TIMEOUT
                      value: "36000"
                    - name: MAX_CONCURRENT_JOBS
                      value: "1"
                    resources:
                      limits:
                        cpu: "4000m"
                        memory: "16Gi"
                        nvidia.com/gpu: "1"
                      requests:
                        cpu: "2000m"
                        memory: "8Gi"
                        nvidia.com/gpu: "1"
        EOF
        
        # Deploy the job
        gcloud run jobs replace cloud-run-job.yaml --region=us-central1
        
        echo "Cloud Run Job deployed successfully"

images:
  - "us-central1-docker.pkg.dev/${_GOOGLE_CLOUD_PROJECT}/laxai-repo/laxai-worker:latest"

options:
  logging: CLOUD_LOGGING_ONLY

timeout: "3600s"
