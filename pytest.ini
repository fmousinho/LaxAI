[pytest]
# Multi-service test configuration
testpaths =
    tests
    sv-tests
    services/service_training/tests
    services/service-api/tests
    services/service-cloud/tests
    services/service-tracking/tests

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Basic test options
addopts =
    --strict-markers
    --tb=short
    -v
    --import-mode=importlib

# Python path configuration for multi-service imports
pythonpath =
    services/service_training/src
    services/service-api/src
    services/service-cloud/src
    services/service-tracking/src
    shared_libs

markers =
    integration: mark a test as an integration test
    performance: mark a test as a performance test
    memory: mark a test as a memory-related performance test
    gpu: mark a test as requiring GPU
    fast: mark a test as a fast test
    slow: mark a test as a slow test
    e2e: mark a test as an end-to-end test
    service_training: mark a test as related to the training service
    service_api: mark a test as related to the API service
    service_cloud: mark a test as related to the cloud service
    service_tracking: mark a test as related to the tracking service
    unit: mark a test as a unit test
    shared_libs: mark a test as using shared_libs
    wandb: mark a test as related to WandB functionality
    sv: mark a test as a system verification test

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
